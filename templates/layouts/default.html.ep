<!DOCTYPE html>
<html lang="en">
  <head>
  
    %= include 'layouts/_headers'
    
    <!-- OTHERS -->
    <title>PERLogger v<%= config->{version} %></title>
  </head>
  <body>

  <div id="app" class="container-fluid h-100 d-flex flex-column">
      <div class="page-header row flex-shrink-0">
          <div class="-h-1 col-12 border"><h3>PERLogger</h3></div>
      </div>

      <div class="row flex-fill" style="min-height:0">

        <splitpanes class="default-theme">
          <pane size="20">
              <b-button size="sm" variant="primary" v-on:click="refreshServers">Update</b-button>
              <b-button size="sm" variant="success" v-on:click="selectAll('All')">+++</b-button>
              <b-button size="sm" variant="secondary" v-on:click="selectAll('None')">---</b-button>
              <b-button size="sm" variant="info" v-on:click="selectAll('Reverse')">+/-</b-button>
              <b-form-group label="Select server(s):" v-slot="{ ariaDescribedby }">
                  <b-form-checkbox-group
                    v-model="selected"
                    :aria-describedby="ariaDescribedby"
                    :options="servers"
                    name="flavour-1"
                    stacked
                    id="item.id"
                  ></b-form-checkbox-group>
                  <!--
                  <template v-for="item in servers">
                    <b-form-checkbox :id="item.id" value="item.lhost"><span v-html="item.html"></span></b-form-checkbox>
                  </template>
                  -->
                </b-form-group>
            </pane>
            <pane>{{ selected }}</pane>
            <pane>3</pane>
        </splitpanes>
        
      </div>
      <div class="page-footer row flex-shrink-0">
          <div class="col-12">&copy; 2021 <a href="https://github.com/maksudnurullaev/PERLogger">PERLogger</a> v<%= config->{version} %>, Vue v{{ vueVersion() }}</div>
      </div>
  </div>

%= javascript begin
    const { Splitpanes, Pane } = splitpanes

    var app = new Vue({
      el: '#app',
      data: {
                counter: 0,
                stopit: false,
                message: 'Hello Vue.js!',
                servers: [],
                selected: [],
            },
      methods: {
        vueVersion: function(){
          return Vue.version;
        },
        selectAll: function(smode){
          var _selected = [];
          switch(smode.toLowerCase()){
            case 'all':
              this.servers.forEach(function(server){
                _selected.push(server.value);
              });
              break;
            case 'reverse':
              this.servers.forEach(function(server){
                if(!app.selected.includes(server.value)){
                  _selected.push(server.value);
                };
              });
          }
          this.selected = _selected;
        },
        refreshServers: function() {
            var self = this;
            axios.get('/servers/').then(
              function(response) {
                self.servers = [];
                response.data.map(function(el){
                  self.servers.push({
                    value:   el.lhost, 
                    html:    el.lhost  + "<sup>" + el.count + "</sup>",
                  });
                });
              }
            );
          },
      },
      components: { Splitpanes, Pane },
      beforeMount(){
        this.refreshServers()
      },
      })

% end 
  </body>
</html>
